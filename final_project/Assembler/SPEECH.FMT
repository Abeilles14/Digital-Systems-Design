                  ;; Define constants for all the ascii values.
                  CONSTANT ascii_SPACE, 20        ; ascii code
                  CONSTANT ascii_EXCLAIM, 21      ; ascii code
                  CONSTANT ascii_DBLQUOT, 22      ; ascii code
                  CONSTANT ascii_NUMSIGN, 23      ; ascii code
                  CONSTANT ascii_DOLLAR, 24       ; ascii code
                  CONSTANT ascii_PERCENT, 25      ; ascii code
                  CONSTANT ascii_AMP, 26          ; ascii code
                  CONSTANT ascii_SINQUOT, 27      ; ascii code
                  CONSTANT ascii_LPAREN, 28       ; ascii code
                  CONSTANT ascii_RPAREN, 29       ; ascii code
                  CONSTANT ascii_ASTERISK, 2A     ; ascii code
                  CONSTANT ascii_PLUS, 2B         ; ascii code
                  CONSTANT ascii_COMMA, 2C        ; ascii code
                  CONSTANT ascii_MINUS, 2D        ; ascii code
                  CONSTANT ascii_PERIOD, 2E       ; ascii code
                  CONSTANT ascii_FWDSLASH, 2F     ; ascii code
                  CONSTANT ascii_0, 30            ; ascii code
                  CONSTANT ascii_1, 31            ; ascii code
                  CONSTANT ascii_2, 32            ; ascii code
                  CONSTANT ascii_3, 33            ; ascii code
                  CONSTANT ascii_4, 34            ; ascii code
                  CONSTANT ascii_5, 35            ; ascii code
                  CONSTANT ascii_6, 36            ; ascii code
                  CONSTANT ascii_7, 37            ; ascii code
                  CONSTANT ascii_8, 38            ; ascii code
                  CONSTANT ascii_9, 39            ; ascii code
                  CONSTANT ascii_COLON, 3A        ; ascii code
                  CONSTANT ascii_SEMI, 3B         ; ascii code
                  CONSTANT ascii_LESS, 3C         ; ascii code
                  CONSTANT ascii_EQUAL, 3D        ; ascii code
                  CONSTANT ascii_GREATER, 3E      ; ascii code
                  CONSTANT ascii_QUESTION, 3F     ; ascii code
                  CONSTANT ascii_CIRCAT, 40       ; ascii code
                  CONSTANT ascii_A, 41            ; ascii code
                  CONSTANT ascii_B, 42            ; ascii code
                  CONSTANT ascii_C, 43            ; ascii code
                  CONSTANT ascii_D, 44            ; ascii code
                  CONSTANT ascii_E, 45            ; ascii code
                  CONSTANT ascii_F, 46            ; ascii code
                  CONSTANT ascii_G, 47            ; ascii code
                  CONSTANT ascii_H, 48            ; ascii code
                  CONSTANT ascii_I, 49            ; ascii code
                  CONSTANT ascii_J, 4A            ; ascii code
                  CONSTANT ascii_K, 4B            ; ascii code
                  CONSTANT ascii_L, 4C            ; ascii code
                  CONSTANT ascii_M, 4D            ; ascii code
                  CONSTANT ascii_N, 4E            ; ascii code
                  CONSTANT ascii_O, 4F            ; ascii code
                  CONSTANT ascii_P, 50            ; ascii code
                  CONSTANT ascii_Q, 51            ; ascii code
                  CONSTANT ascii_R, 52            ; ascii code
                  CONSTANT ascii_S, 53            ; ascii code
                  CONSTANT ascii_T, 54            ; ascii code
                  CONSTANT ascii_U, 55            ; ascii code
                  CONSTANT ascii_V, 56            ; ascii code
                  CONSTANT ascii_W, 57            ; ascii code
                  CONSTANT ascii_X, 58            ; ascii code
                  CONSTANT ascii_Y, 59            ; ascii code
                  CONSTANT ascii_Z, 5A            ; ascii code
                  CONSTANT ascii_LBKT, 5B         ; ascii code
                  CONSTANT ascii_BKSLASH, 5C      ; ascii code
                  CONSTANT ascii_RBKT, 5D         ; ascii code
                  CONSTANT ascii_CARET, 5E        ; ascii code
                  CONSTANT ascii_DASH, 5F         ; ascii code
                  CONSTANT ascii_TICK, 60         ; ascii code
                  CONSTANT ascii_a, 61            ; ascii code
                  CONSTANT ascii_b, 62            ; ascii code
                  CONSTANT ascii_c, 63            ; ascii code
                  CONSTANT ascii_d, 64            ; ascii code
                  CONSTANT ascii_e, 65            ; ascii code
                  CONSTANT ascii_f, 66            ; ascii code
                  CONSTANT ascii_g, 67            ; ascii code
                  CONSTANT ascii_h, 68            ; ascii code
                  CONSTANT ascii_i, 69            ; ascii code
                  CONSTANT ascii_j, 6A            ; ascii code
                  CONSTANT ascii_k, 6B            ; ascii code
                  CONSTANT ascii_l, 6C            ; ascii code
                  CONSTANT ascii_m, 6D            ; ascii code
                  CONSTANT ascii_n, 6E            ; ascii code
                  CONSTANT ascii_o, 6F            ; ascii code
                  CONSTANT ascii_p, 70            ; ascii code
                  CONSTANT ascii_q, 71            ; ascii code
                  CONSTANT ascii_r, 72            ; ascii code
                  CONSTANT ascii_s, 73            ; ascii code
                  CONSTANT ascii_t, 74            ; ascii code
                  CONSTANT ascii_u, 75            ; ascii code
                  CONSTANT ascii_v, 76            ; ascii code
                  CONSTANT ascii_w, 77            ; ascii code
                  CONSTANT ascii_x, 78            ; ascii code
                  CONSTANT ascii_y, 79            ; ascii code
                  CONSTANT ascii_z, 7A            ; ascii code
                  CONSTANT ascii_LBRACE, 7B       ; ascii code
                  CONSTANT ascii_VBAR, 7C         ; ascii code
                  CONSTANT ascii_RBRACE, 7D       ; ascii code
                  CONSTANT ascii_TILDE, 7E        ; ascii code
                  CONSTANT ascii_ULINE, 7F        ; ascii code
                  ;; Define constants for all the phoneme values.
                  CONSTANT phoneme_PA1, 00        ; phoneme code
                  CONSTANT phoneme_PA2, 01        ; phoneme code
                  CONSTANT phoneme_PA3, 02        ; phoneme code
                  CONSTANT phoneme_PA4, 03        ; phoneme code
                  CONSTANT phoneme_PA5, 04        ; phoneme code
                  CONSTANT phoneme_OY, 05         ; phoneme code
                  CONSTANT phoneme_AY, 06         ; phoneme code
                  CONSTANT phoneme_EH, 07         ; phoneme code
                  CONSTANT phoneme_KK3, 08        ; phoneme code
                  CONSTANT phoneme_PP, 09         ; phoneme code
                  CONSTANT phoneme_JH, 0A         ; phoneme code
                  CONSTANT phoneme_NN1, 0B        ; phoneme code
                  CONSTANT phoneme_IH, 0C         ; phoneme code
                  CONSTANT phoneme_TT2, 0D        ; phoneme code
                  CONSTANT phoneme_RR1, 0E        ; phoneme code
                  CONSTANT phoneme_AX, 0F         ; phoneme code
                  CONSTANT phoneme_MM, 10         ; phoneme code
                  CONSTANT phoneme_TT1, 11        ; phoneme code
                  CONSTANT phoneme_DH1, 12        ; phoneme code
                  CONSTANT phoneme_IY, 13         ; phoneme code
                  CONSTANT phoneme_EY, 14         ; phoneme code
                  CONSTANT phoneme_DD1, 15        ; phoneme code
                  CONSTANT phoneme_UW1, 16        ; phoneme code
                  CONSTANT phoneme_AO, 17         ; phoneme code
                  CONSTANT phoneme_AA, 18         ; phoneme code
                  CONSTANT phoneme_YY2, 19        ; phoneme code
                  CONSTANT phoneme_AE, 1A         ; phoneme code
                  CONSTANT phoneme_HH1, 1B        ; phoneme code
                  CONSTANT phoneme_BB1, 1C        ; phoneme code
                  CONSTANT phoneme_TH, 1D         ; phoneme code
                  CONSTANT phoneme_UH, 1E         ; phoneme code
                  CONSTANT phoneme_UW2, 1F        ; phoneme code
                  CONSTANT phoneme_AW, 20         ; phoneme code
                  CONSTANT phoneme_DD2, 21        ; phoneme code
                  CONSTANT phoneme_GG3, 22        ; phoneme code
                  CONSTANT phoneme_VV, 23         ; phoneme code
                  CONSTANT phoneme_GG1, 24        ; phoneme code
                  CONSTANT phoneme_SH, 25         ; phoneme code
                  CONSTANT phoneme_ZH, 26         ; phoneme code
                  CONSTANT phoneme_RR2, 27        ; phoneme code
                  CONSTANT phoneme_FF, 28         ; phoneme code
                  CONSTANT phoneme_KK2, 29        ; phoneme code
                  CONSTANT phoneme_KK1, 2A        ; phoneme code
                  CONSTANT phoneme_ZZ, 2B         ; phoneme code
                  CONSTANT phoneme_NG, 2C         ; phoneme code
                  CONSTANT phoneme_LL, 2D         ; phoneme code
                  CONSTANT phoneme_WW, 2E         ; phoneme code
                  CONSTANT phoneme_XR, 2F         ; phoneme code
                  CONSTANT phoneme_WH, 30         ; phoneme code
                  CONSTANT phoneme_YY1, 31        ; phoneme code
                  CONSTANT phoneme_CH, 32         ; phoneme code
                  CONSTANT phoneme_ER1, 33        ; phoneme code
                  CONSTANT phoneme_ER2, 34        ; phoneme code
                  CONSTANT phoneme_OW, 35         ; phoneme code
                  CONSTANT phoneme_DH2, 36        ; phoneme code
                  CONSTANT phoneme_SS, 37         ; phoneme code
                  CONSTANT phoneme_NN2, 38        ; phoneme code
                  CONSTANT phoneme_HH2, 39        ; phoneme code
                  CONSTANT phoneme_OR, 3A         ; phoneme code
                  CONSTANT phoneme_AR, 3B         ; phoneme code
                  CONSTANT phoneme_YR, 3C         ; phoneme code
                  CONSTANT phoneme_GG2, 3D        ; phoneme code
                  CONSTANT phoneme_EL, 3E         ; phoneme code
                  CONSTANT phoneme_BB2, 3F        ; phoneme code
                  ;INPUTS
                  CONSTANT input_data, 40
                  CONSTANT start_phoneme_flag, 00
                  CONSTANT start_word_flag, 02
                  ;OUTPUTS
                  CONSTANT phoneme_out, 80
                  CONSTANT done_phoneme_flag, 01
                  CONSTANT done_word_flag, 10
                  ;;============================================================================
                  ;; Infinite loop.
                  ;;============================================================================
                  ;REGISTER USE
                  ; s8 = IN input EQUALS (8 bits)
                  ; s7 = IN input DIGIT 2 ascii
                  ; s6 = IN input OPERATION (8 bits)
                  ; s3 = IN input DIGIT 1 ascii, FINAL RESULT (8 bits)
                  ; s5 = IN new input received flag
                  ; s4 = OUT done audio output flag
                  ; s0 - s2 = say_phoneme subroutine use
      cold_start: 
                  JUMP get_digit_1                ;loop
      done_audio: 
                  LOAD s4, 01                     ;done flag
                  OUTPUT s4, done_word_flag
                  LOAD s4, 00                     ;reset done flag
                  OUTPUT s4, done_word_flag
                  RETURN                          ;loop to cold_start
     get_digit_1: 
                  INPUT s5, start_word_flag       ;wait for start flag, key stroke entered
                  COMPARE s5, 01
                  JUMP NZ, get_digit_1
                  INPUT s3, input_data            ;get input data
                  COMPARE s3, ascii_0             ;if zero flag set (input s3 == ascii 0)
                  CALL Z, talkword0               ;output phoneme + done audio
                  JUMP Z, get_operation
                  COMPARE s3, ascii_1
                  CALL Z, talkword1
                  JUMP Z, get_operation
                  COMPARE s3, ascii_2
                  CALL Z, talkword2
                  JUMP Z, get_operation
                  COMPARE s3, ascii_3
                  CALL Z, talkword3
                  JUMP Z, get_operation
                  COMPARE s3, ascii_4
                  CALL Z, talkword4
                  JUMP Z, get_operation
                  COMPARE s3, ascii_5
                  CALL Z, talkword5
                  JUMP Z, get_operation
                  COMPARE s3, ascii_6
                  CALL Z, talkword6
                  JUMP Z, get_operation
                  COMPARE s3, ascii_7
                  CALL Z, talkword7
                  JUMP Z, get_operation
                  COMPARE s3, ascii_8
                  CALL Z, talkword8
                  JUMP Z, get_operation
                  COMPARE s3, ascii_9
                  CALL Z, talkword9
                  JUMP Z, get_operation
                  CALL talkworderror              ;else output error
                  JUMP cold_start                 ;loop
   get_operation: 
                  INPUT s5, start_word_flag       ;wait for start flag, key stroke entered
                  COMPARE s5, 01
                  JUMP NZ, get_operation          ;loop
                  INPUT s6, input_data            ;get input data
                  COMPARE s6, ascii_MINUS
                  CALL Z, talkwordminus
                  JUMP Z, get_digit_2
                  COMPARE s6, ascii_PLUS
                  CALL Z, talkwordplus
                  JUMP Z, get_digit_2
                  CALL talkworderror              ;else output error
                  JUMP get_operation
     get_digit_2: 
                  INPUT s5, start_word_flag       ;wait for start flag, key stroke entered
                  COMPARE s5, 01
                  JUMP NZ, get_digit_2            ;loop
                  INPUT s7, input_data            ;get input data
                  COMPARE s7, ascii_0             ;if zero flag set (input s3 == ascii 0)
                  CALL Z, talkword0
                  JUMP Z, get_equal
                  COMPARE s7, ascii_1
                  CALL Z, talkword1
                  JUMP Z, get_equal
                  COMPARE s7, ascii_2
                  CALL Z, talkword2
                  JUMP Z, get_equal
                  COMPARE s7, ascii_3
                  CALL Z, talkword3
                  JUMP Z, get_equal
                  COMPARE s7, ascii_4
                  CALL Z, talkword4
                  JUMP Z, get_equal
                  COMPARE s7, ascii_5
                  CALL Z, talkword5
                  JUMP Z, get_equal
                  COMPARE s7, ascii_6
                  CALL Z, talkword6
                  JUMP Z, get_equal
                  COMPARE s7, ascii_7
                  CALL Z, talkword7
                  JUMP Z, get_equal
                  COMPARE s7, ascii_8
                  CALL Z, talkword8
                  JUMP Z, get_equal
                  COMPARE s7, ascii_9
                  CALL Z, talkword9
                  JUMP Z, get_equal
                  CALL talkworderror              ;else output error
                  JUMP get_digit_2
       get_equal: 
                  INPUT s5, start_word_flag       ;wait for start flag, key stroke entered
                  COMPARE s5, 01
                  JUMP NZ, get_equal              ;loop
                  INPUT s8, input_data            ;get input data
                  COMPARE s8, ascii_EQUAL
                  CALL Z, talkwordequals
                  JUMP Z, calculate
                  CALL talkworderror              ;else output error
                  JUMP get_equal
       calculate: ; s3 +/- s7
                  COMPARE s6, ascii_MINUS
                  JUMP Z, op_minus                ;minus operation
         op_plus: ;plus operation
                  ADD s3, s7
                  SUB s3, 60                      ;sub 60 from total to get hex sum, not ascii
                  JUMP result
        op_minus: 
                  SUB s3, s7
                  COMPARE s3, 80                  ;check left bit for negative
                  JUMP C, result                  ;if positive, get result
                  CALL talkwordminus              ;else call talkwordminus
                  XOR s3, FF                      ;take complement & abs value
                  ADD s3, 01
                  JUMP result
          result: 
                  COMPARE s3, 00                  ;if zero flag set (input s3 == ascii 0)
                  CALL Z, talkword0
                  COMPARE s3, 01
                  CALL Z, talkword1
                  COMPARE s3, 02
                  CALL Z, talkword2
                  COMPARE s3, 03
                  CALL Z, talkword3
                  COMPARE s3, 04
                  CALL Z, talkword4
                  COMPARE s3, 05
                  CALL Z, talkword5
                  COMPARE s3, 06
                  CALL Z, talkword6
                  COMPARE s3, 07
                  CALL Z, talkword7
                  COMPARE s3, 08
                  CALL Z, talkword8
                  COMPARE s3, 09
                  CALL Z, talkword9
                  COMPARE s3, 0A
                  CALL Z, talkword10
                  COMPARE s3, 0B
                  CALL Z, talkword11
                  COMPARE s3, 0C
                  CALL Z, talkword12
                  COMPARE s3, 0D
                  CALL Z, talkword13
                  COMPARE s3, 0E
                  CALL Z, talkword14
                  COMPARE s3, 0F
                  CALL Z, talkword15
                  COMPARE s3, 10
                  CALL Z, talkword16
                  COMPARE s3, 11
                  CALL Z, talkword17
                  COMPARE s3, 12
                  CALL Z, talkword18
                  JUMP reset
           reset: 
                  LOAD s3, 00
                  LOAD s4, 00
                  LOAD s5, 00
                  LOAD s6, 00
                  LOAD s7, 00
                  LOAD s8, 00
                  JUMP cold_start
                  ;;============================================================================
                  ;; Test message and phoneme voicing subroutine.
                  ;;============================================================================
                  ;================================================
       talkword0: 
                  CALL talkphonemeZZ
                  CALL talkphonemeEH
                  CALL talkphonemeRR2
                  CALL talkphonemeOW
                  CALL done_audio
                  RETURN
       talkword1: 
                  CALL talkphonemeWW
                  CALL talkphonemeAO
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
       talkword2: 
                  CALL talkphonemeTT2
                  CALL talkphonemeUW2
                  CALL done_audio
                  RETURN
       talkword3: 
                  CALL talkphonemeTH
                  CALL talkphonemeRR2
                  CALL talkphonemeIY
                  CALL done_audio
                  RETURN
       talkword4: 
                  CALL talkphonemeFF
                  CALL talkphonemeOR
                  CALL done_audio
                  RETURN
       talkword5: 
                  CALL talkphonemeFF
                  CALL talkphonemeAY
                  CALL talkphonemeVV
                  CALL done_audio
                  RETURN
       talkword6: 
                  CALL talkphonemeSS
                  CALL talkphonemeIH
                  CALL talkphonemeKK2
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL done_audio
                  RETURN
       talkword7: 
                  CALL talkphonemeSS
                  CALL talkphonemeEH
                  CALL talkphonemeVV
                  CALL talkphonemeAX
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
       talkword8: 
                  CALL talkphonemeEY
                  CALL talkphonemeTT1
                  ;call  done_audio
                  RETURN
       talkword9: 
                  CALL talkphonemeNN2
                  CALL talkphonemeAY
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
      talkword10: 
                  CALL talkphonemeTT2
                  CALL talkphonemeEH
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
      talkword11: 
                  CALL talkphonemeIH
                  CALL talkphonemeLL
                  CALL talkphonemeEH
                  CALL talkphonemeVV
                  CALL talkphonemeEH
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
      talkword12: 
                  CALL talkphonemeTT2
                  CALL talkphonemeWW
                  CALL talkphonemeEH
                  CALL talkphonemeEL
                  CALL talkphonemeVV
                  CALL done_audio
                  RETURN
      talkword13: 
                  CALL talkphonemeTH
                  CALL talkphonemeER2
                  JUMP talkwordteen
    talkwordteen: 
                  CALL talkphonemeTT2
                  CALL talkphonemeIY
                  CALL talkphonemeNN1
                  CALL done_audio
                  RETURN
      talkword14: 
                  CALL talkword4
                  JUMP talkwordteen
      talkword15: 
                  CALL talkphonemeFF
                  CALL talkphonemeIH
                  CALL talkphonemeFF
                  JUMP talkwordteen
      talkword16: 
                  CALL talkword6
                  JUMP talkwordteen
      talkword17: 
                  CALL talkword7
                  JUMP talkwordteen
      talkword18: 
                  CALL talkword8
                  JUMP talkwordteen
    talkwordplus: 
                  CALL talkphonemePP
                  CALL talkphonemeLL
                  CALL talkphonemeAX
                  CALL talkphonemeAX
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL done_audio
                  RETURN
   talkwordminus: 
                  CALL talkphonemeMM
                  CALL talkphonemeAY
                  CALL talkphonemeNN1
                  CALL talkphonemeIH
                  CALL talkphonemeAX
                  CALL talkphonemeAX
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL done_audio
                  RETURN
  talkwordequals: 
                  CALL talkphonemeIY
                  CALL talkphonemePA2
                  CALL talkphonemePA3
                  CALL talkphonemeKK3
                  CALL talkphonemeWH
                  CALL talkphonemeAX
                  CALL talkphonemeEL
                  CALL talkphonemeZZ
                  CALL done_audio
                  RETURN
   talkworderror: 
                  CALL talkphonemeEH
                  CALL talkphonemeXR
                  CALL talkphonemeOR
                  CALL done_audio
                  RETURN
                  ;=====================================================
      talkword19: 
                  CALL talkword9
                  JUMP talkwordteen
      talkword20: 
                  CALL talkphonemeTT2
                  CALL talkphonemeWW
                  CALL talkphonemeEH
                  CALL talkphonemeNN1
      talkwordty: 
                  CALL talkphonemeTT2
                  CALL talkphonemeIY
                  RETURN
      talkword30: 
                  CALL talkphonemeTH
                  CALL talkphonemeER1
                  JUMP talkwordty
      talkword40: 
                  CALL talkword4
                  JUMP talkwordty
      talkword50: 
                  CALL talkphonemeFF
                  CALL talkphonemeIH
                  CALL talkphonemeFF
                  JUMP talkwordty
      talkword60: 
                  CALL talkword6
                  JUMP talkwordty
      talkword70: 
                  CALL talkword7
                  JUMP talkwordty
      talkword80: 
                  CALL talkword8
                  JUMP talkwordty
      talkword90: 
                  CALL talkword9
                  JUMP talkwordty
 talkwordhundred: 
                  CALL talkphonemeHH2
                  CALL talkphonemeAX
                  CALL talkphonemeNN1
                  CALL talkphonemeDD2
                  CALL talkphonemeRR2
                  CALL talkphonemeDD1
                  RETURN
   talkworddepth: 
                  CALL talkphonemeDD2
                  CALL talkphonemeEH
                  CALL talkphonemeEH
                  CALL talkphonemePP
                  CALL talkphonemeTH
                  JUMP endword
   talkwordpoint: 
                  CALL talkphonemePP
                  CALL talkphonemeOY
                  CALL talkphonemeTT1
                  JUMP endword
  talkwordanchor: 
                  CALL talkphonemeEY
                  CALL talkphonemeKK3
                  CALL talkphonemeAE
                  JUMP endword
   talkwordalarm: 
                  CALL talkphonemeAE
                  CALL talkphonemeLL
                  CALL talkphonemeAR
                  CALL talkphonemeMM
                  JUMP endword
      talkwordon: 
                  CALL talkphonemeAO
                  CALL talkphonemeNG
                  JUMP endword
     talkwordoff: 
                  CALL talkphonemeAO
                  CALL talkphonemeFF
                  CALL talkphonemeFF
                  JUMP endword
 talkwordshallow: 
                  CALL talkphonemeSH
                  CALL talkphonemeAE
                  CALL talkphonemeLL
                  CALL talkphonemeOW
                  JUMP endword
     talkwordand: 
                  CALL talkphonemeIH
                  CALL talkphonemeIH
                  CALL talkphonemeNN1
                  CALL talkphonemeDD2
                  JUMP endword
   talkwordwatch: 
                  CALL talkphonemeWW
                  CALL talkphonemeAO
                  CALL talkphonemeTT1
                  CALL talkphonemeCH
                  JUMP endword
   talkwordlimit: 
                  CALL talkphonemeLL
                  CALL talkphonemeIH
                  CALL talkphonemeMM
                  CALL talkphonemeIH
                  CALL talkphonemeTT1
                  JUMP endword
     talkwordset: 
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL talkphonemeEH
                  CALL talkphonemeTT2
                  JUMP endword
 talkwordheading: 
                  CALL talkphonemeHH1
                  CALL talkphonemeEH
                  CALL talkphonemeDD2
                  CALL talkphonemeIH
                  CALL talkphonemeNG
                  JUMP endword
     talkwordgps: 
                  CALL talkphonemeJH
                  CALL talkphonemeIY
                  CALL talkphonemePP
                  CALL talkphonemeIY
                  CALL talkphonemeEH
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  JUMP endword
      talkwordno: 
                  CALL talkphonemeNN2
                  CALL talkphonemeOW
                  JUMP endword
    talkworddata: 
                  CALL talkphonemeDD2
                  CALL talkphonemeEY
                  CALL talkphonemeTT2
                  CALL talkphonemeAX
                  JUMP endword
   talkwordnorth: 
                  CALL talkphonemeNN2
                  CALL talkphonemeOR
                  CALL talkphonemeHH1
                  JUMP endword
   talkwordsouth: 
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL talkphonemeAW
                  CALL talkphonemeTH
                  CALL talkphonemeTH
                  JUMP endword
    talkwordeast: 
                  CALL talkphonemeIY
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL talkphonemeTT2
                  JUMP endword
    talkwordwest: 
                  CALL talkphonemeWW
                  CALL talkphonemeEH
                  CALL talkphonemeSS
                  CALL talkphonemeSS
                  CALL talkphonemeTT2
                  JUMP endword
talkwordposition: 
                  CALL talkphonemePP
                  CALL talkphonemeIH
                  CALL talkphonemeZZ
                  CALL talkphonemeIH
                  CALL talkphonemeSH
                  CALL talkphonemeNN1
                  JUMP endword
         endword: 
                  CALL talkphonemePA5
                  RETURN
     say_phoneme: 
                  ;make sure  to complete this subroutine in order for the synthesizer to work
                  ;LOAD s2, 01
                  INPUT s1, start_phoneme_flag    ;check if start routine
                  COMPARE s1, 01
                  JUMP NZ, say_phoneme
                  OUTPUT s0, phoneme_out
                  LOAD s2, 01
                  OUTPUT s2, done_phoneme_flag
                  LOAD s2, 00
                  OUTPUT s2, done_phoneme_flag
                  RETURN
   talkphonemeAA: ; hOt
                  LOAD s0, phoneme_AA             ; can be doubled
                  JUMP say_phoneme
   talkphonemeAE: ; hAt
                  LOAD s0, phoneme_AE             ; can be doubled
                  JUMP say_phoneme
   talkphonemeAO: ; AUght
                  LOAD s0, phoneme_AO             ; can be doubled
                  JUMP say_phoneme
   talkphonemeAR: ; alARm
                  LOAD s0, phoneme_AR
                  JUMP say_phoneme
   talkphonemeAW: ; dOWn
                  LOAD s0, phoneme_AW
                  JUMP say_phoneme
   talkphonemeAX: ; sUceed
                  LOAD s0, phoneme_AX             ; can be doubled
                  JUMP say_phoneme
   talkphonemeAY: ; kIte
                  LOAD s0, phoneme_AY
                  JUMP say_phoneme
  talkphonemeBB1: ; riB
                  LOAD s0, phoneme_BB1            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeBB2: ; Beast
                  LOAD s0, phoneme_BB2            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
   talkphonemeCH: ; CHurCH
                  LOAD s0, phoneme_CH
                  JUMP say_phoneme
  talkphonemeDD1: ; enD
                  LOAD s0, phoneme_DD1            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeDD2: ; Down
                  LOAD s0, phoneme_DD2            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeDH1: ; THis
                  LOAD s0, phoneme_DH1
                  JUMP say_phoneme
  talkphonemeDH2: ; baTHe
                  LOAD s0, phoneme_DH2
                  JUMP say_phoneme
   talkphonemeEH: ; End
                  LOAD s0, phoneme_EH             ; can be doubled
                  JUMP say_phoneme
   talkphonemeEL: ; angLE
                  LOAD s0, phoneme_EL
                  JUMP say_phoneme
  talkphonemeER1: ; lettER
                  LOAD s0, phoneme_ER1
                  JUMP say_phoneme
  talkphonemeER2: ; fERn
                  LOAD s0, phoneme_ER2
                  JUMP say_phoneme
   talkphonemeEY: ; trAY
                  LOAD s0, phoneme_EY
                  JUMP say_phoneme
   talkphonemeFF: ; Food
                  LOAD s0, phoneme_FF             ; usually double for initial
                  JUMP say_phoneme
  talkphonemeGG1: ; Guest
                  LOAD s0, phoneme_GG1            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeGG2: ; Got
                  LOAD s0, phoneme_GG2            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeGG3: ; peG
                  LOAD s0, phoneme_GG3            ; usually preceed with 10-30 mS silence
                  JUMP say_phoneme
  talkphonemeHH1: ; He
                  LOAD s0, phoneme_HH1            ; usually double for initial
                  JUMP say_phoneme
  talkphonemeHH2: ; Hoe
                  LOAD s0, phoneme_HH2            ; usually double for initial
                  JUMP say_phoneme
   talkphonemeIH: ; sIt
                  LOAD s0, phoneme_IH             ; can be doubled
                  JUMP say_phoneme
   talkphonemeIY: ; sEE
                  LOAD s0, phoneme_IY
                  JUMP say_phoneme
   talkphonemeJH: ; JudGe
                  LOAD s0, phoneme_JH
                  JUMP say_phoneme
  talkphonemeKK1: ; Can't
                  LOAD s0, phoneme_KK1            ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
  talkphonemeKK2: ; speaK
                  LOAD s0, phoneme_KK2            ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
  talkphonemeKK3: ; Crane
                  LOAD s0, phoneme_KK3            ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
   talkphonemeLL: ; Like
                  LOAD s0, phoneme_LL
                  JUMP say_phoneme
   talkphonemeMM: ; Milk
                  LOAD s0, phoneme_MM
                  JUMP say_phoneme
   talkphonemeNG: ; aNGer
                  LOAD s0, phoneme_NG
                  JUMP say_phoneme
  talkphonemeNN1: ; thiN
                  LOAD s0, phoneme_NN1
                  JUMP say_phoneme
  talkphonemeNN2: ; No
                  LOAD s0, phoneme_NN2
                  JUMP say_phoneme
   talkphonemeOR: ; fORtune
                  LOAD s0, phoneme_OR
                  JUMP say_phoneme
   talkphonemeOW: ; zOne
                  LOAD s0, phoneme_OW
                  JUMP say_phoneme
   talkphonemeOY: ; vOIce
                  LOAD s0, phoneme_OY
                  JUMP say_phoneme
   talkphonemePP: ; Pow
                  LOAD s0, phoneme_PP             ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
  talkphonemeRR1: ; Read
                  LOAD s0, phoneme_RR1
                  JUMP say_phoneme
  talkphonemeRR2: ; cRane
                  LOAD s0, phoneme_RR2
                  JUMP say_phoneme
   talkphonemeSH: ; SHip
                  LOAD s0, phoneme_SH             ; usually double for initial
                  JUMP say_phoneme
   talkphonemeSS: ; veSt
                  LOAD s0, phoneme_SS             ; usually double for initial
                  JUMP say_phoneme
   talkphonemeTH: ; THin
                  LOAD s0, phoneme_TH             ; usually double for initial
                  JUMP say_phoneme
  talkphonemeTT1: ; parTs
                  LOAD s0, phoneme_TT1            ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
  talkphonemeTT2: ; To
                  LOAD s0, phoneme_TT2            ; usually preceed with 50-80 mS silence
                  JUMP say_phoneme
   talkphonemeUH: ; bOOk
                  LOAD s0, phoneme_UH             ; may be doubled
                  JUMP say_phoneme
  talkphonemeUW1: ; tO
                  LOAD s0, phoneme_UW1
                  JUMP say_phoneme
  talkphonemeUW2: ; fOOd
                  LOAD s0, phoneme_UW2
                  JUMP say_phoneme
   talkphonemeVV: ; Vest
                  LOAD s0, phoneme_VV
                  JUMP say_phoneme
   talkphonemeWH: ; WHig
                  LOAD s0, phoneme_WH             ; usually double for initial
                  JUMP say_phoneme
   talkphonemeWW: ; We
                  LOAD s0, phoneme_WW
                  JUMP say_phoneme
   talkphonemeXR: ; stARs
                  LOAD s0, phoneme_XR
                  JUMP say_phoneme
   talkphonemeYR: ; hEAr
                  LOAD s0, phoneme_YR
                  JUMP say_phoneme
  talkphonemeYY1: ; cUte
                  LOAD s0, phoneme_YY1
                  JUMP say_phoneme
  talkphonemeYY2: ; Yes
                  LOAD s0, phoneme_YY2
                  JUMP say_phoneme
   talkphonemeZH: ; pleaSure
                  LOAD s0, phoneme_ZH
                  JUMP say_phoneme
   talkphonemeZZ: ; Zoo
                  LOAD s0, phoneme_ZZ
                  JUMP say_phoneme
  talkphonemePA1: ; 10 mS silence
                  LOAD s0, phoneme_PA1
                  JUMP say_phoneme
  talkphonemePA2: ; 30 mS silence
                  LOAD s0, phoneme_PA2
                  JUMP say_phoneme
  talkphonemePA3: ; 50 mS silence
                  LOAD s0, phoneme_PA3
                  JUMP say_phoneme
  talkphonemePA4: ; 100 mS silence
                  LOAD s0, phoneme_PA4
                  JUMP say_phoneme
  talkphonemePA5: ; 200 mS silence
                  LOAD s0, phoneme_PA5
                  JUMP say_phoneme
  talkphonemePA6: ; 500 mS silence
                  CALL talkphonemePA5
                  CALL talkphonemePA5
                  CALL talkphonemePA4
                  JUMP say_phoneme
